import { Prop, Schema } from '@nestjs/mongoose';

import { Types } from 'mongoose';

@Schema({
  timestamps: true,
  discriminatorKey: '__type',
  // Add useful schema options
  toJSON: {
    virtuals: true,
    getters: true,
    versionKey: false,
    transform: (_, ret) => {
      ret.id = ret._id.toString();
      delete ret._id;
      return ret;
    },
  },
  toObject: {
    virtuals: true,
    getters: true,
    versionKey: false,
  },
})
export class BaseSchema {
  /**
   * Document ID
   * Automatically generated by MongoDB
   */
  _id: Types.ObjectId;

  /**
   * Creation timestamp
   * Automatically managed by Mongoose
   */
  @Prop()
  createdAt: Date;

  /**
   * Last update timestamp
   * Automatically managed by Mongoose
   */
  @Prop()
  updatedAt: Date;

  /**
   * Version number
   * Automatically incremented by Mongoose
   */
  @Prop()
  __v?: number;

  // Virtual getter for id (cleaner API responses)
  id?: string;
}
